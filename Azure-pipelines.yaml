# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

stages:
- stage: "buildsatge"
  jobs:
  - job: "dev" 
    pool:
      vmImage: 'windows-latest'

    variables:
     solution: '**/*.sln'
     buildPlatform: 'Any CPU'
     buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

- stage: "DevDeploy"
  dependsOn: "buildsatge"
  condition: eq(variables['Build.Sourcebranch'], 'refs/heads/main')
  jobs:
  - deployment:
    pool: 
      vmImage: 'windows-latest'
      environment: Dev
      strategy:
      runOnce:
      deploy:
        steps:
        - task: AzureRMWebdeployment@4
          inputs:
          connectionType: 'AzureRM'
          appType: 'WebApp'
          WebAppName: 'Dev-app-demo'
          packageForLinux: '$(pipeline.Workspace)/**/*.zip'
- stage: "QADeploy"
  dependsOn: "DevDeploy"
  condition: succeeded()
  jobs:
  - deployment:
    pool: 
      vmImage: 'windows-latest'
      environment: QA
      strategy:
      runOnce:
      deploy:
        steps:
        - task: AzureRMWebdeployment@4
          inputs:
          connectionType: 'AzureRM'
          appType: 'WebApp'
          WebAppName: 'QA-app-demo'
          packageForLinux: '$(pipeline.Workspace)/**/*.zip'